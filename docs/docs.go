// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://www.sangfor.com.cn",
        "contact": {
            "name": "Zhaojin Zhang,Bochun Zheng",
            "url": "http://www.sangfor.com.cn"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/pools": {
            "get": {
                "description": "List task pool information including resource usage and running task overview",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TaskPools"
                ],
                "summary": "List task pools",
                "responses": {
                    "200": {
                        "description": "Queue information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/task.TaskPoolSummary"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a task pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TaskPools"
                ],
                "summary": "Add a task pool",
                "parameters": [
                    {
                        "description": "Task pool",
                        "name": "pool",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.TaskPoolArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task pool result",
                        "schema": {
                            "$ref": "#/definitions/service.TaskPoolResult"
                        }
                    }
                }
            }
        },
        "/v1/pools/{name}": {
            "get": {
                "description": "Get task pool details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TaskPools"
                ],
                "summary": "Get task pool details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pool name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Get detailed info",
                        "name": "verbose",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pool information",
                        "schema": {
                            "$ref": "#/definitions/task.TaskPoolDetail"
                        }
                    }
                }
            },
            "put": {
                "description": "Update task pool definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TaskPools"
                ],
                "summary": "Update task pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task pool ID",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task pool",
                        "name": "pools",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.TaskPoolArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update task pool",
                        "schema": {
                            "$ref": "#/definitions/service.TaskPoolResult"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete task pool and associated PoolResource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TaskPools"
                ],
                "summary": "Delete task pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pool name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete success message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Running tasks exist",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    },
                    "404": {
                        "description": "Pool not found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    }
                }
            }
        },
        "/v1/tasks": {
            "get": {
                "description": "List tasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "List tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Task owner",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Target resource pool",
                        "name": "pool",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Project name",
                        "name": "project",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Task status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Template name",
                        "name": "template",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID",
                        "name": "uuid",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Output task details",
                        "name": "verbose",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task list result",
                        "schema": {
                            "$ref": "#/definitions/dao.ListTasksResult"
                        }
                    }
                }
            },
            "post": {
                "description": "Submit task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Submit task",
                "parameters": [
                    {
                        "description": "Task object",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dao.TaskObjRec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task commit result (UUID, RunID)",
                        "schema": {
                            "$ref": "#/definitions/service.TaskCommitResult"
                        }
                    }
                }
            }
        },
        "/v1/tasks/{uuid}": {
            "get": {
                "description": "Get task metadata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task object details",
                        "schema": {
                            "$ref": "#/definitions/dao.TaskRec"
                        }
                    }
                }
            },
            "delete": {
                "description": "Stop task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Stop task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation success message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/tasks/{uuid}/logs": {
            "get": {
                "description": "Get task logs with stream support (tail/follow) and regular pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    " plain/text"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Entity that task may start multiple instances (e.g. threads, PODs)",
                        "name": "entity",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "follow",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "tail",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "timestamps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Streaming log output",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    }
                }
            }
        },
        "/v1/tasks/{uuid}/status": {
            "get": {
                "description": "Get task status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task status information",
                        "schema": {
                            "$ref": "#/definitions/service.TaskStatusResult"
                        }
                    }
                }
            }
        },
        "/v1/tasks/{uuid}/tags": {
            "get": {
                "description": "Get task tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task tags",
                        "schema": {
                            "$ref": "#/definitions/service.TaskTagsResult"
                        }
                    }
                }
            },
            "post": {
                "description": "Tag task, usually to notify scheduler for specific handling strategy like guaranteed task or idle task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Tag task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tag content in Key=Value format, multiple tags can be set simultaneously",
                        "name": "tags",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All tags of the task",
                        "schema": {
                            "$ref": "#/definitions/service.TaskTagsResult"
                        }
                    }
                }
            }
        },
        "/v1/templates": {
            "get": {
                "description": "Task templates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TaskTemplates"
                ],
                "summary": "List task templates",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Include details",
                        "name": "verbose",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of task template names",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dao.TemplateRec"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    }
                }
            },
            "post": {
                "description": "Create task template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TaskTemplates"
                ],
                "summary": "Create task template",
                "parameters": [
                    {
                        "description": "Template definition",
                        "name": "templates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dao.TemplateRec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created template (ID+Name)",
                        "schema": {
                            "$ref": "#/definitions/controllers.AddTemplateResult"
                        }
                    }
                }
            }
        },
        "/v1/templates/{name}": {
            "get": {
                "description": "Get task template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TaskTemplates"
                ],
                "summary": "Get task template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task template details",
                        "schema": {
                            "$ref": "#/definitions/dao.TemplateRec"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    },
                    "404": {
                        "description": "Template not found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    }
                }
            },
            "put": {
                "description": "Update task template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TaskTemplates"
                ],
                "summary": "Update task template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template definition",
                        "name": "templates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dao.TemplateRec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Template creation result (ID+Name)",
                        "schema": {
                            "$ref": "#/definitions/controllers.AddTemplateResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete task template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TaskTemplates"
                ],
                "summary": "Delete task template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete success message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Tasks using this template exist",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    },
                    "404": {
                        "description": "Template not found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ResponseData"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.AddTemplateResult": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controllers.ResponseData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dao.ListTasksResult": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dao.TaskRec"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dao.PoolResource": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "record ID",
                    "type": "integer"
                },
                "pool_id": {
                    "description": "pool ID",
                    "type": "string"
                },
                "res_name": {
                    "description": "resource name",
                    "type": "string"
                },
                "res_num": {
                    "description": "resource quantity",
                    "type": "string"
                }
            }
        },
        "dao.TaskObjRec": {
            "type": "object",
            "properties": {
                "args": {
                    "description": "User arguments for task (JSON)",
                    "type": "string"
                },
                "callback": {
                    "description": "Callback URL",
                    "type": "string"
                },
                "created_by": {
                    "description": "Creator",
                    "type": "string"
                },
                "extra": {
                    "description": "Extra info for template (JSON)",
                    "type": "string"
                },
                "name": {
                    "description": "Task name",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace",
                    "type": "string"
                },
                "pool": {
                    "description": "Task pool",
                    "type": "string"
                },
                "project": {
                    "description": "Project name",
                    "type": "string"
                },
                "quotas": {
                    "description": "Resource quotas (JSON)",
                    "type": "string"
                },
                "tags": {
                    "description": "Tags affecting scheduling (JSON key=value)",
                    "type": "string"
                },
                "template": {
                    "description": "Template name",
                    "type": "string"
                },
                "timeout": {
                    "description": "Timeout settings (JSON)",
                    "type": "string"
                },
                "uuid": {
                    "description": "Task UUID",
                    "type": "string"
                }
            }
        },
        "dao.TaskRec": {
            "type": "object",
            "properties": {
                "args": {
                    "description": "User arguments for task (JSON)",
                    "type": "string"
                },
                "callback": {
                    "description": "Callback URL",
                    "type": "string"
                },
                "create_time": {
                    "description": "Creation time",
                    "type": "string"
                },
                "created_by": {
                    "description": "Creator",
                    "type": "string"
                },
                "end_log": {
                    "description": "Final logs",
                    "type": "string"
                },
                "end_time": {
                    "description": "End time",
                    "type": "string"
                },
                "error": {
                    "description": "Error message",
                    "type": "string"
                },
                "extra": {
                    "description": "Extra info for template (JSON)",
                    "type": "string"
                },
                "name": {
                    "description": "Task name",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace",
                    "type": "string"
                },
                "pool": {
                    "description": "Task pool",
                    "type": "string"
                },
                "project": {
                    "description": "Project name",
                    "type": "string"
                },
                "quotas": {
                    "description": "Resource quotas (JSON)",
                    "type": "string"
                },
                "running_time": {
                    "description": "Running start time",
                    "type": "string"
                },
                "start_time": {
                    "description": "Start time",
                    "type": "string"
                },
                "status": {
                    "description": "Task status",
                    "type": "string"
                },
                "tags": {
                    "description": "Tags affecting scheduling (JSON key=value)",
                    "type": "string"
                },
                "template": {
                    "description": "Template name",
                    "type": "string"
                },
                "timeout": {
                    "description": "Timeout settings (JSON)",
                    "type": "string"
                },
                "update_time": {
                    "description": "Last update time",
                    "type": "string"
                },
                "uuid": {
                    "description": "Task UUID",
                    "type": "string"
                },
                "warning": {
                    "description": "Warning message",
                    "type": "string"
                },
                "yaml_content": {
                    "description": "Deployment file content",
                    "type": "string"
                }
            }
        },
        "dao.TemplateRec": {
            "type": "object",
            "properties": {
                "create_time": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "extra": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "schema": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "service.TaskCommitResult": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "service.TaskLogsResult": {
            "type": "object",
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/task.EntityLogs"
                    }
                },
                "status": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "service.TaskPoolArgs": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "pool configuration for various task engines",
                    "type": "string"
                },
                "description": {
                    "description": "pool description showing key information for user understanding",
                    "type": "string"
                },
                "engine": {
                    "description": "task execution engine",
                    "type": "string"
                },
                "pool_id": {
                    "description": "pool ID",
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dao.PoolResource"
                    }
                },
                "running": {
                    "description": "maximum concurrent tasks",
                    "type": "integer"
                },
                "waiting": {
                    "description": "maximum queued tasks",
                    "type": "integer"
                }
            }
        },
        "service.TaskPoolResult": {
            "type": "object",
            "properties": {
                "pool_id": {
                    "type": "string"
                }
            }
        },
        "service.TaskStatusResult": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "service.TaskTagsResult": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "task.EntityLogs": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "entity": {
                    "type": "string"
                },
                "logs": {
                    "type": "string"
                }
            }
        },
        "task.ResourceItem": {
            "type": "object",
            "properties": {
                "allocate": {
                    "description": "allocated amount",
                    "type": "string"
                },
                "capacity": {
                    "description": "configured capacity",
                    "type": "string"
                },
                "name": {
                    "description": "resource name",
                    "type": "string"
                },
                "remain": {
                    "description": "actual remaining",
                    "type": "string"
                }
            }
        },
        "task.TaskInstanceSummary": {
            "type": "object",
            "properties": {
                "create_time": {
                    "description": "queue time",
                    "type": "string"
                },
                "created_by": {
                    "description": "created by",
                    "type": "string"
                },
                "end_time": {
                    "description": "end time",
                    "type": "string"
                },
                "error": {
                    "description": "error message",
                    "type": "string"
                },
                "name": {
                    "description": "task name",
                    "type": "string"
                },
                "pool": {
                    "description": "running pool",
                    "type": "string"
                },
                "running_time": {
                    "description": "actual running start time",
                    "type": "string"
                },
                "start_time": {
                    "description": "start time",
                    "type": "string"
                },
                "status": {
                    "description": "task status",
                    "type": "string"
                },
                "tags": {
                    "description": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "uuid": {
                    "description": "task unique ID",
                    "type": "string"
                },
                "warning": {
                    "description": "warning message",
                    "type": "string"
                }
            }
        },
        "task.TaskPoolDetail": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "task pool configuration",
                    "type": "string"
                },
                "engine": {
                    "description": "task pool engine",
                    "type": "string"
                },
                "max_running": {
                    "description": "maximum parallel tasks",
                    "type": "integer"
                },
                "max_waiting": {
                    "description": "maximum waiting tasks",
                    "type": "integer"
                },
                "pool_id": {
                    "description": "Pool ID",
                    "type": "string"
                },
                "resources": {
                    "description": "resource information of the pool",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/task.ResourceItem"
                    }
                },
                "running": {
                    "description": "current running tasks",
                    "type": "integer"
                },
                "tasks": {
                    "description": "task information in queue or running",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/task.TaskInstanceSummary"
                    }
                },
                "waiting": {
                    "description": "current waiting tasks",
                    "type": "integer"
                }
            }
        },
        "task.TaskPoolSummary": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "Pool configuration",
                    "type": "string"
                },
                "engine": {
                    "description": "Task engine used by pool",
                    "type": "string"
                },
                "max_running": {
                    "description": "Maximum concurrent tasks",
                    "type": "integer"
                },
                "max_waiting": {
                    "description": "Maximum queued tasks",
                    "type": "integer"
                },
                "pool_id": {
                    "description": "Pool identifier",
                    "type": "string"
                },
                "running": {
                    "description": "Number of tasks currently running in pool",
                    "type": "integer"
                },
                "waiting": {
                    "description": "Number of tasks currently waiting in pool",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/taskd/api",
	Schemes:          []string{},
	Title:            "Task Management",
	Description:      "Task Management System",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
