apiVersion: v1
kind: ConfigMap
metadata:
  name: taskd-cm
  namespace: shenma
data:
  env.yaml: |
    env: __env_profile
    db:
      type: sqlite3
      databaseName: taskd
      host: ${{__env_profile.database.host}}
      port: ${{__env_profile.database.port}}
      password: ${{__env_profile.database.password}}
      user: ${{__env_profile.database.user}}
    redis:
      addr: ${{__env_profile.redis.addr}}
      password: ${{__env_profile.redis.password}}
      db: ${{__env_profile.redis.db}}
    timeout:
      phaseQueueDefault: 300
      phaseInitDefault: 300
    auth:
      enable: false
      fakeUser: admin
    pool:
      enable: false
    wechat:
      enable: true
      proxy: http://10.72.1.42:8899
    server:
      listenAddr: ":8080"
      debug: true
      logger: true
    logger:
      level: debug
      format: text
      output: stdout
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: taskd
  namespace: shenma
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: taskd
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: taskd
    spec:
      containers:
      - image: ${{SHENMA_DOCKER_REPO}}/taskd:${{IMAGE_TIMESTAMP}}
        imagePullPolicy: Always
        name: taskd
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 2
            memory: 2Gi
          requests:
            cpu: 1
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /env.yaml
            name: config-volume
            subPath: env.yaml
      volumes:
        - configMap:
            defaultMode: 420
            name: taskd-cm
          name: config-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: taskd
      serviceAccountName: taskd
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  namespace: shenma
  name: taskd
  labels:
    app: taskd
spec:
  # pod的标签选择器
  type: NodePort
  selector:
    app: taskd
  # 暴露的端口列表
  ports:
    # HTTP服务端口
    - name: http
      port: 80
      nodePort: 31223
      targetPort: 8080
      protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: shenma
  name: taskd
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: taskd
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["get", "watch", "list", "create", "delete", "update","deletecollection"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: taskd
subjects:
  - kind: ServiceAccount
    namespace: shenma
    name: taskd
roleRef:
  kind: ClusterRole
  name: taskd
  apiGroup: rbac.authorization.k8s.io

